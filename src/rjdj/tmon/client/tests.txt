==============================
Tests for the client API
==============================

    >>> from rjdj.tmon.server.models import WebService
    >>> from django.contrib.auth.models import User 
    >>> from rjdj.tmon import client
    >>> from rjdj.tmon.client import config
    >>> import urllib2
    >>> from pprint import pprint    

Preparations:
    >>> SECRET = "ABCDEFABCDEFABCDEFABCDEF"

    >>> user = User()
    >>> user.username = "testuser"
    >>> user.set_password("test")
    >>> user.email = "test@test.com"
    >>> user.save()

    >>> ws = WebService()    
    >>> ws.owner = user
    >>> ws.secret = SECRET
    >>> ws.save()

are we good to go?
    >>> client.track()
    Traceback (most recent call last):
    ...
    TypeError: track() takes at least 3 arguments (0 given)

    >>> client.track("some/url", "useragent", "192.168.0.1")
    Traceback (most recent call last):
    ...
    NotConfigured

no, so configure the client module first:

    >>> config.WEBSERVICE_ID = ws.id
    >>> config.SERVER_URL = "http://localhost:8000"
    >>> config.WEBSERVICE_SECRET = SECRET
    
A valid request looks like this:
    >>> useragents = [ "Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405",
    ...                "Mozilla/5.0 (Linux; U; Android 2.2.1; fr-ch; A43 Build/FROYO) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1",
    ...                "Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543a Safari/419.3" ]
    >>> ips = [ "72.32.231.8",
    ...         "194.232.104.140",
    ...         "213.131.233.151" ]
    
    >>> webservices = [ "/register", "/login", "/get/data/from/something" ]
    
    
    
# for i in xrange(len(useragents)):
#    client.track(webservices[i], useragents[i], ips[i]) 
    
    >>> client.track(webservices[0], useragents[0], ips[0]) 
    
now any data that has been inserted can be queried:
    
    >>> result = urllib2.urlopen("/".join((config.SERVER_URL, "%d/data/users/os" % config.WEBSERVICE_ID))).read()
    >>> print result
    {
        "status": 200, 
        "results": [
            ...
        ]
    }

